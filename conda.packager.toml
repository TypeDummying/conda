
# Conda Packager Configuration
# This file defines the packaging settings for the Conda package manager
# used with our Rust library and package manager 'conda'.

[package]
name = "conda"
version = "0.1.0"
description = "A powerful Rust library and package manager for Conda environments"
authors = ["conda.net"]
license = "MIT OR Apache-2.0"
repository = "https://github.com/conda/conda.git"
documentation = "https://docs.rs/conda"
readme = "README.md"
keywords = ["conda", "package-manager", "rust", "environment"]
categories = ["development-tools", "command-line-utilities"]

# Build settings
[build]
# Specify the Rust edition to use
rust-version = "1.56"

# Dependencies required for building the package
[build-dependencies]
cc = "1.0"
pkg-config = "0.3"

# Runtime dependencies
[dependencies]
serde = { version = "1.0", features = ["derive"] }
toml = "0.5"
reqwest = { version = "0.11", features = ["json"] }
tokio = { version = "1", features = ["full"] }
clap = { version = "3.0", features = ["derive"] }
anyhow = "1.0"
log = "0.4"
env_logger = "0.9"
tempfile = "3.2"
walkdir = "2.3"
indicatif = "0.16"
crossterm = "0.22"
semver = "1.0"
regex = "1.5"
lazy_static = "1.4"
rayon = "1.5"
chrono = { version = "0.4", features = ["serde"] }
serde_json = "1.0"
url = "2.2"
dirs = "4.0"
sha2 = "0.10"
base64 = "0.13"
zstd = "0.9"
tar = "0.4"

# Optional features
[features]
default = ["cli", "network"]
cli = ["clap"]
network = ["reqwest"]
compression = ["zstd"]

# Configuration for the Conda environment
[conda]
# Minimum supported Conda version
min_version = "4.9.0"

# Channels to use for package resolution
channels = [
    "conda-forge",
    "bioconda",
    "defaults"
]

# Default environment specifications
[conda.env]
name = "conda-rust"
python_version = "3.9"

# Package specifications for the Conda environment
[conda.env.dependencies]
python = ">=3.7,<4.0"
pip = "*"
rust = ">=1.56"

# Additional pip packages to install
[conda.env.pip]
maturin = ">=0.12,<0.13"
pytest = ">=6.0"
black = ">=21.0"

# Build script configuration
[package.metadata.conda-forge]
recipe_dir = "conda-recipe"
channels = ["conda-forge"]
github_organization = "conda-forge"
travis_env_vars = { BINSTAR_TOKEN = "your_travis_token_here" }

# Configuration for automated builds
[package.metadata.conda-forge.build]
number = 0
script = "build.sh"
skip-lints = ["uses_setup_py_install_after_build_env"]

# OS-specific build configurations
[package.metadata.conda-forge.build.linux]
compiler_stack = "comp7"
max_py_ver = "37"
max_r_ver = "35"

[package.metadata.conda-forge.build.osx]
osx_is_app = false

# Package information for different OS
[package.metadata.conda-forge.package]
license_file = "LICENSE-APACHE"
doc_url = "https://docs.rs/conda"
dev_url = "https://github.com/yourusername/conda"
doc_source_url = "https://github.com/yourusername/conda/tree/main/src"

# Output settings
[package.metadata.conda-forge.output]
recipe_dir = "recipe"

# Test configuration
[package.metadata.conda-forge.test]
commands = [
    "conda --version",
    "conda list",
    "conda info",
    "python -c 'import conda; print(conda.__version__)'"
]

# Requirements for running tests
[package.metadata.conda-forge.test.requires]
pytest = ">=6.0"
pytest-cov = ">=2.10"

# Configuration for uploading to PyPI
[package.metadata.conda-forge.pypi]
# PyPI package name (if different from Conda package name)
pypi_name = "conda-rust"

# Additional metadata for the package
[package.metadata]
long_description = """
Conda is a powerful Rust library and package manager for Conda environments.
It provides a seamless integration between Rust and Conda, allowing developers
to easily manage their Python environments and dependencies within Rust projects.

Features:
- Create, manage, and delete Conda environments
- Install, update, and remove packages
- Search for packages across multiple channels
- Export and import environment configurations
- Integration with Rust build systems and cargo
- Cross-platform support (Linux, macOS, Windows)
"""

# Configuration for documentation generation
[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

# Benchmarking configuration
[dev-dependencies]
criterion = "0.3"

[[bench]]
name = "conda_benchmarks"
harness = false

# Example configurations
[[example]]
name = "create_environment"
required-features = ["cli"]

[[example]]
name = "install_package"
required-features = ["cli", "network"]

[[example]]
name = "export_environment"
required-features = ["cli"]

# Workspace configuration (if part of a larger project)
[workspace]
members = [
    "conda-core",
    "conda-cli",
    "conda-api"
]

# Profile-specific build settings
[profile.release]
opt-level = 3
lto = true
codegen-units = 1
panic = "abort"
strip = true

[profile.dev]
opt-level = 0
debug = true

# Custom profile for performance-critical code
[profile.perf]
inherits = "release"
debug = true
